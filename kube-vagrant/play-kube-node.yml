---
- hosts: all
  become: true
  tasks:

#################################################################
#  setup a new kubernetes master or worker node

  - assert:
      that:
        - node_ip is defined
      msg: node_ip must be defined in calling this playbook

  - name: COM.1-Update apt-get repo and cache
    apt: 
      update_cache: yes 
      force_apt_get: yes 
      cache_valid_time: 3600
    register: mas_com_1
  - debug: var=mas_com_1

  - name: COM.2-Install packages that allow installs over HTTPS
    package:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
    register: mas_com_2
#  - debug: var=mas_com_2.stdout_lines

  - name: COM.3-Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
    register: mas_com_3
#  - debug: var=mas_com_3.stdout_lines

  - name: COM.4-Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present
    register: mas_com_4
#  - debug: var=mas_com_4.stdout_lines

  - name: COM.5-Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
    notify:
      - docker status
    register: mas_com_5
  - debug: var=mas_com_5.stdout_lines

  # https://github.com/kubernetes/kubeadm/issues/1394
  - name: COM.6-set docker to use systemd driver
    copy: 
      dest: /etc/docker/daemon.json
      content: |
        # THIS FILE IS CONTROLLED BY ANSIBLE - DO NOT CHANGE IN DEPLOYMENT!
        # Setup daemon.
        {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-driver": "json-file",
          "log-opts": {
            "max-size": "100m"
          },
          "storage-driver": "overlay2"
        }
      owner: root
      group: root
      mode: "0644"
    notify:
      - docker status
    register: mas_com_6
#  - debug: var=mas_com_6

  - name: COM.7-Add vagrant user to docker group
    user:
      name: vagrant
      group: docker
    register: mas_com_7
#  - debug: var=mas_com_7.stdout_lines

  - name: COM.8-Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap

    register: mas_com_8
#  - debug: var=mas_com_8.stdout_lines

  - name: COM.9-Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0
    register: mas_com_9
#  - debug: var=mas_com_9.stdout_lines

  - name: COM.10-Create calico nodename for node stats
    file:
      name: "{{ item }}"
      state: directory
      recurse: yes
      owner: root
      group: root
    register: mas_com_10
    with_items:
      - /var/lib/calico
#  - debug: var=mas_com_10

  - name: COM.11-Create calico nodename for node stats
    file:
      name: /var/lib/calico/nodename
      state: touch
      owner: root
      group: root
    register: com_11
#  - debug: var=com_11

#################################################################

# master node creates join command here
#
  - name: NODE.1-Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: NODE.2-Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: NODE.3-Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
#      update_cache: yes
    vars:
      packages:
        - kubeadm 
        - kubectl
    register: node_3
  - debug: var=node_3.stdout_lines

  - name: NODE.4-Copy the join command to server location
    copy: 
      src: join-command 
      dest: /tmp/join-command.sh 
      mode: 0777

  - name: NODE.5-Join the node to cluster
    command: sh /tmp/join-command.sh
    args:
      creates: /etc/kubernetes/pki/ca.crt
    register: node_5
  - debug: var=node_5.stdout_lines

#  - name: NODE.6-clone csi-driver-host-path add-on
#    git:
#      repo: https://github.com/kubernetes-csi/csi-driver-host-path.git
#      dest: /home/vagrant/csi-driver-host-path
#    register: node_6
#  - debug: var=node_6

#  - name: NODE.7-install csi-driver-host-path driver
#    command: /home/vagrant/csi-driver-host-path/deploy/kubernetes-1.17/deploy-hostpath.sh
#    register: node_7
#  - debug: var=node_7.stdout_lines



  handlers:
  - name: docker status
    service: name=docker state=started
